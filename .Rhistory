legend.title = element_text(size = 8)) +
guides(size = guide_legend(nrow = 1))
brew_loc$brew_descrip <- case_when(
brew_loc$num_brewery %in% 1:5 ~ "1-5 Breweries",
brew_loc$num_brewery %in% 6:10 ~ "6-10 Breweries",
brew_loc$num_brewery %in% 10:20 ~ "10-20 Breweries",
brew_loc$num_brewery %in% 20:40 ~ "20-40 Breweries",
brew_loc$num_brewery > 40 ~ "More than 40 Breweries"
)
brew_loc$brew_descrip <- fct_inorder(brew_loc$brew_descrip) %>% fct_rev()
p <- ggplot(data = brew_loc, mapping = aes(x = city_lon, y = city_lat,
size = num_brewery, frame = brew_descrip)) +
geom_polygon(data = states, mapping = aes(x = long, y = lat, group = group),
color = "white", inherit.aes = FALSE) +
geom_point(aes(x = city_lon, y = city_lat, size = num_brewery),
color = "grey", alpha = 0.2, inherit.aes = FALSE) +
geom_point(color = "red", alpha = 0.5) +
scale_size_area(name = "Number of\nBreweries", breaks = seq(10, 60, 10)) +
coord_map() +
labs(title = "US Breweries: Cities with ") +
theme_void() +
theme(plot.title = element_text(size = 12, face = "bold",
margin = margin(3, 0, 0, 0)),
legend.position = "bottom",
legend.title = element_text(size = 8),
plot.margin = unit(c(0,0,0,0), "in")) +
guides(size = guide_legend(nrow = 1))
gg_animate(p, interval = 2)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "Output/"
)
library(knitr)
library(animation)
ani.options(autobrowse = FALSE, interval = 2)
opts_knit$set(animation.fun = function(x, options, format = "git") {
x = c(knitr:::sans_ext(x), knitr:::file_ext(x))
fig.num = options$fig.num
format = sub("^[.]", "", format)
fig.fname = paste0(sub(paste0(fig.num, "$"), "*", x[1]),
".", x[2])
mov.fname = paste0(sub(paste0(fig.num, "$"), "", x[1]), ".",
format)
# order correctly
figs <- Sys.glob(fig.fname)
figs <- figs[order(as.numeric(stringr::str_match(figs,
paste0("(\\d+)\\.", x[2]))[, 2]))]
animation::im.convert(figs, output = mov.fname)
sprintf("![%s](%s)", options$label, paste0(opts_knit$get("base.url"),
mov.fname))
})
opts_chunk$set(echo = TRUE, cache = FALSE)
# install.packages("devtools")
# install.packages("knitr")
# install.packages("maps")
# devtools::install_github("hadley/ggplot2")
# devtools::install_github("hadley/dplyr")
# devtools::install_github("hadley/purrr")
# devtools::install_github("hadley/tidyr")
# devtools::install_github("hadley/forcats")
library(ggplot2)
library(dplyr)
library(purrr)
library(tidyr)
library(forcats)
library(maps)
library(gganimate)
load("all_breweries.RData")
all_breweries
brew_plot <- all_breweries %>%
filter(!is.na(brewery_rating), !is.na(num_beers),
state %in% c("Kansas", "Oklahoma", "Missouri", "Missouri", "Iowa",
"Nebraska", "Colorado"),
num_beers < 400)
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating, color = type))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating, shape = type))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating, size = type))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating), color = "blue")
ggplot(data = brew_plot) +
geom_bar(mapping = aes(x = state))
ggplot(data = brew_plot) +
geom_bar(mapping = aes(x = state, fill = type))
ggplot(data = brew_plot) +
geom_bar(mapping = aes(x = state, fill = type), position = position_dodge())
ggplot(data = brew_plot) +
geom_density(mapping = aes(x = num_beers))
ggplot(data = brew_plot, mapping = aes(x = num_beers)) +
geom_histogram(mapping = aes(y = ..density..), binwidth = 10,
alpha = 0.6, color = "black", fill = "black") +
geom_density(fill = "red", color = "black", alpha = 0.3)
ggplot(data = brew_plot) +
geom_boxplot(mapping = aes(x = state, y = num_beers))
ggplot(data = brew_plot) +
geom_violin(mapping = aes(x = state, y = brewery_rating))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating)) +
geom_smooth(mapping = aes(x = num_beers, y = brewery_rating))
ggplot(data = brew_plot, mapping = aes(x = num_beers, y = brewery_rating)) +
geom_point() +
geom_smooth()
ggplot(data = brew_plot, mapping = aes(x = num_beers, y = brewery_rating)) +
geom_point(mapping = aes(color = type)) +
geom_smooth()
ggplot(data = brew_plot, mapping = aes(x = num_beers, y = brewery_rating)) +
geom_point(mapping = aes(color = type)) +
geom_smooth(data = filter(brew_plot, type == "Brewery, Eatery"))
ggplot(data = brew_plot, mapping = aes(x = num_beers, y = brewery_rating)) +
geom_point(mapping = aes(color = type)) +
geom_smooth(se = FALSE) +
facet_wrap(~ type)
ggplot(brew_plot) +
geom_violin(mapping = aes(x = state, y = brewery_rating, fill = state)) +
scale_x_discrete(labels = c("CO", "IA", "KS", "MO", "NE", "OK")) +
scale_fill_brewer(type = "qual", palette = "Set3") +
labs(x = "State", y = "Number of Beers",
title = "How many beers do breweries make?",
subtitle = "Few breweries sell over 50 beers",
caption = "Data from beeradvocate.com") +
theme_bw() +
theme(plot.title = element_text(size = 12, face = "bold"),
plot.subtitle = element_text(size = 10, face = "italic"),
plot.caption = element_text(size = 6),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.title.x = element_text(margin = margin(5, 0, 5, 0)),
axis.title.y = element_text(margin = margin(0, 5, 0, 0)),
legend.position = "none")
ggsave("Output/Violin_Plot.pdf")
plot_list <- unique(brew_plot$state) %>% list_along()
names(plot_list) <- unique(brew_plot$state)
for (i in seq_along(plot_list)) {
plot <- ggplot(data = filter(brew_plot, state == names(plot_list)[i]),
mapping = aes(x = num_beers)) +
geom_histogram(mapping = aes(y = ..density..), binwidth = 10,
alpha = 0.6, color = "black", fill = "black") +
geom_density(fill = "red", color = "black", alpha = 0.3) +
labs(x = "Number of Beers", y = "Density",
title = "Distribution of Number of Beers Sold",
subtitle = paste0("Breweries in ", names(plot_list)[i]),
caption = "Data from beeradvocate.com") +
theme_bw() +
theme(plot.title = element_text(size = 12, face = "bold"),
plot.subtitle = element_text(size = 10, face = "italic"),
plot.caption = element_text(size = 6),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.title.x = element_text(margin = margin(5, 0, 5, 0)),
axis.title.y = element_text(margin = margin(0, 5, 0, 0)),
legend.position = "none")
plot_list[[i]] <- plot
}
filenames <- paste0(names(plot_list), ".pdf")
pwalk(list(filenames, plot_list), ggsave, path = paste0(getwd(), "/Output/"))
sum_data <- brew_plot %>%
group_by(state) %>%
summarize(mean = mean(brewery_rating), sd = sd(brewery_rating)) %>%
mutate(lb = mean - sd, ub = mean + sd)
ggplot(data = sum_data, mapping = aes(x = state, y = mean, color = state,
fill = state)) +
geom_bar(stat = "identity", alpha = 0.2, color = NA) +
geom_boxplot(mapping = aes(ymin = lb, lower = lb, middle = mean, upper = ub,
ymax = ub), stat = "identity", alpha = 0.4) +
geom_violin(data = brew_plot, mapping = aes(x = state, y = brewery_rating),
fill = NA) +
geom_jitter(data = brew_plot, mapping = aes(x = state, y = brewery_rating),
height = 0, width = 0.15, alpha = 0.2) +
scale_y_continuous(breaks = seq(0, 5, 1)) +
labs(x = NULL, y = "Brewery Rating",
title = "Distributions of Brewery Ratings",
subtitle = "It's a pirate plot!") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 12),
plot.subtitle = element_text(face = "italic", size = 10),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.title.y = element_text(margin = margin(0, 5, 0, 0)),
legend.position = "none",
panel.grid.major.x = element_blank())
# Our filtered sample
states <- map_data("state") %>%
filter(region %in% c("kansas", "oklahoma", "missouri", "iowa", "nebraska",
"colorado"))
brew_loc <- brew_plot %>%
#filter(!(state %in% c("Alaska", "Hawaii"))) %>%
group_by(full_city, city_lon, city_lat) %>%
summarize(n = n()) %>%
#filter(n >= 5) %>%
arrange(desc(n))
ggplot() +
geom_polygon(data = states, mapping = aes(x = long, y = lat, group = group),
color = "white") +
geom_point(data = brew_loc, mapping = aes(x = city_lon, y = city_lat,
size = n), color = "red", alpha = 0.5) +
scale_size_area(name = "Number of\nBreweries") +
coord_map() +
labs(title = "Central US Breweries") +
theme_void() +
theme(plot.title = element_text(size = 12, face = "bold",
margin = margin(3, 0, 0, 0)),
legend.position = "bottom",
legend.title = element_text(size = 8))
# The whole US
states <- map_data("state")
brew_loc <- all_breweries %>%
filter(!(state %in% c("Alaska", "Hawaii"))) %>%
group_by(state, full_city, city_lon, city_lat) %>%
summarize(num_brewery = n(),
mean_rating = mean(brewery_rating, na.rm = TRUE),
mean_beeravg = mean(beer_avg, na.rm = TRUE)) %>%
#filter(num_brewery >= 3) %>%
arrange(desc(num_brewery))
brew_loc <- brew_loc[which(complete.cases(brew_loc)), ]
ggplot() +
geom_polygon(data = states, mapping = aes(x = long, y = lat, group = group),
color = "white") +
geom_point(data = brew_loc, mapping = aes(x = city_lon, y = city_lat,
size = num_brewery), color = "red", alpha = 0.5) +
scale_size_area(name = "Number of\nBreweries", breaks = seq(10, 60, 10)) +
coord_map() +
labs(title = "All US Breweries") +
theme_void() +
theme(plot.title = element_text(size = 12, face = "bold",
margin = margin(3, 0, 0, 0)),
legend.position = "bottom",
legend.title = element_text(size = 8)) +
guides(size = guide_legend(nrow = 1))
brew_loc$brew_descrip <- case_when(
brew_loc$num_brewery %in% 1:5 ~ "1-5 Breweries",
brew_loc$num_brewery %in% 6:10 ~ "6-10 Breweries",
brew_loc$num_brewery %in% 10:20 ~ "10-20 Breweries",
brew_loc$num_brewery %in% 20:40 ~ "20-40 Breweries",
brew_loc$num_brewery > 40 ~ "More than 40 Breweries"
)
brew_loc$brew_descrip <- fct_inorder(brew_loc$brew_descrip) %>% fct_rev()
p <- ggplot(data = brew_loc, mapping = aes(x = city_lon, y = city_lat,
size = num_brewery, frame = brew_descrip)) +
geom_polygon(data = states, mapping = aes(x = long, y = lat, group = group),
color = "white", inherit.aes = FALSE) +
geom_point(aes(x = city_lon, y = city_lat, size = num_brewery),
color = "grey", alpha = 0.2, inherit.aes = FALSE) +
geom_point(color = "red", alpha = 0.5) +
scale_size_area(name = "Number of\nBreweries", breaks = seq(10, 60, 10)) +
coord_map() +
labs(title = "US Breweries: Cities with ") +
theme_void() +
theme(plot.title = element_text(size = 12, face = "bold",
margin = margin(3, 0, 0, 0)),
legend.position = "bottom",
legend.title = element_text(size = 8),
plot.margin = unit(c(0,0,0,0), "in")) +
guides(size = guide_legend(nrow = 1))
gg_animate(p, interval = 2)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "Output/"
)
library(knitr)
library(animation)
ani.options(autobrowse = FALSE, interval = 2)
opts_knit$set(animation.fun = function(x, options, format = "gif") {
x = c(knitr:::sans_ext(x), knitr:::file_ext(x))
fig.num = options$fig.num
format = sub("^[.]", "", format)
fig.fname = paste0(sub(paste0(fig.num, "$"), "*", x[1]),
".", x[2])
mov.fname = paste0(sub(paste0(fig.num, "$"), "", x[1]), ".",
format)
# order correctly
figs <- Sys.glob(fig.fname)
figs <- figs[order(as.numeric(stringr::str_match(figs,
paste0("(\\d+)\\.", x[2]))[, 2]))]
animation::im.convert(figs, output = mov.fname)
sprintf("![%s](%s)", options$label, paste0(opts_knit$get("base.url"),
mov.fname))
})
knitr::opts_chunk$set(echo = TRUE, cache = FALSE)
# install.packages("devtools")
# install.packages("knitr")
# install.packages("maps")
# devtools::install_github("hadley/ggplot2")
# devtools::install_github("hadley/dplyr")
# devtools::install_github("hadley/purrr")
# devtools::install_github("hadley/tidyr")
# devtools::install_github("hadley/forcats")
library(ggplot2)
library(dplyr)
library(purrr)
library(tidyr)
library(forcats)
library(maps)
library(gganimate)
load("all_breweries.RData")
all_breweries
brew_plot <- all_breweries %>%
filter(!is.na(brewery_rating), !is.na(num_beers),
state %in% c("Kansas", "Oklahoma", "Missouri", "Missouri", "Iowa",
"Nebraska", "Colorado"),
num_beers < 400)
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating, color = type))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating, shape = type))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating, size = type))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating), color = "blue")
ggplot(data = brew_plot) +
geom_bar(mapping = aes(x = state))
ggplot(data = brew_plot) +
geom_bar(mapping = aes(x = state, fill = type))
ggplot(data = brew_plot) +
geom_bar(mapping = aes(x = state, fill = type), position = position_dodge())
ggplot(data = brew_plot) +
geom_density(mapping = aes(x = num_beers))
ggplot(data = brew_plot, mapping = aes(x = num_beers)) +
geom_histogram(mapping = aes(y = ..density..), binwidth = 10,
alpha = 0.6, color = "black", fill = "black") +
geom_density(fill = "red", color = "black", alpha = 0.3)
ggplot(data = brew_plot) +
geom_boxplot(mapping = aes(x = state, y = num_beers))
ggplot(data = brew_plot) +
geom_violin(mapping = aes(x = state, y = brewery_rating))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating))
ggplot(data = brew_plot) +
geom_point(mapping = aes(x = num_beers, y = brewery_rating)) +
geom_smooth(mapping = aes(x = num_beers, y = brewery_rating))
ggplot(data = brew_plot, mapping = aes(x = num_beers, y = brewery_rating)) +
geom_point() +
geom_smooth()
ggplot(data = brew_plot, mapping = aes(x = num_beers, y = brewery_rating)) +
geom_point(mapping = aes(color = type)) +
geom_smooth()
ggplot(data = brew_plot, mapping = aes(x = num_beers, y = brewery_rating)) +
geom_point(mapping = aes(color = type)) +
geom_smooth(data = filter(brew_plot, type == "Brewery, Eatery"))
ggplot(data = brew_plot, mapping = aes(x = num_beers, y = brewery_rating)) +
geom_point(mapping = aes(color = type)) +
geom_smooth(se = FALSE) +
facet_wrap(~ type)
ggplot(brew_plot) +
geom_violin(mapping = aes(x = state, y = brewery_rating, fill = state)) +
scale_x_discrete(labels = c("CO", "IA", "KS", "MO", "NE", "OK")) +
scale_fill_brewer(type = "qual", palette = "Set3") +
labs(x = "State", y = "Number of Beers",
title = "How many beers do breweries make?",
subtitle = "Few breweries sell over 50 beers",
caption = "Data from beeradvocate.com") +
theme_bw() +
theme(plot.title = element_text(size = 12, face = "bold"),
plot.subtitle = element_text(size = 10, face = "italic"),
plot.caption = element_text(size = 6),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.title.x = element_text(margin = margin(5, 0, 5, 0)),
axis.title.y = element_text(margin = margin(0, 5, 0, 0)),
legend.position = "none")
ggsave("Output/Violin_Plot.pdf")
plot_list <- unique(brew_plot$state) %>% list_along()
names(plot_list) <- unique(brew_plot$state)
for (i in seq_along(plot_list)) {
plot <- ggplot(data = filter(brew_plot, state == names(plot_list)[i]),
mapping = aes(x = num_beers)) +
geom_histogram(mapping = aes(y = ..density..), binwidth = 10,
alpha = 0.6, color = "black", fill = "black") +
geom_density(fill = "red", color = "black", alpha = 0.3) +
labs(x = "Number of Beers", y = "Density",
title = "Distribution of Number of Beers Sold",
subtitle = paste0("Breweries in ", names(plot_list)[i]),
caption = "Data from beeradvocate.com") +
theme_bw() +
theme(plot.title = element_text(size = 12, face = "bold"),
plot.subtitle = element_text(size = 10, face = "italic"),
plot.caption = element_text(size = 6),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.title.x = element_text(margin = margin(5, 0, 5, 0)),
axis.title.y = element_text(margin = margin(0, 5, 0, 0)),
legend.position = "none")
plot_list[[i]] <- plot
}
filenames <- paste0(names(plot_list), ".pdf")
pwalk(list(filenames, plot_list), ggsave, path = paste0(getwd(), "/Output/"))
sum_data <- brew_plot %>%
group_by(state) %>%
summarize(mean = mean(brewery_rating), sd = sd(brewery_rating)) %>%
mutate(lb = mean - sd, ub = mean + sd)
ggplot(data = sum_data, mapping = aes(x = state, y = mean, color = state,
fill = state)) +
geom_bar(stat = "identity", alpha = 0.2, color = NA) +
geom_boxplot(mapping = aes(ymin = lb, lower = lb, middle = mean, upper = ub,
ymax = ub), stat = "identity", alpha = 0.4) +
geom_violin(data = brew_plot, mapping = aes(x = state, y = brewery_rating),
fill = NA) +
geom_jitter(data = brew_plot, mapping = aes(x = state, y = brewery_rating),
height = 0, width = 0.15, alpha = 0.2) +
scale_y_continuous(breaks = seq(0, 5, 1)) +
labs(x = NULL, y = "Brewery Rating",
title = "Distributions of Brewery Ratings",
subtitle = "It's a pirate plot!") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 12),
plot.subtitle = element_text(face = "italic", size = 10),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.title.y = element_text(margin = margin(0, 5, 0, 0)),
legend.position = "none",
panel.grid.major.x = element_blank())
# Our filtered sample
states <- map_data("state") %>%
filter(region %in% c("kansas", "oklahoma", "missouri", "iowa", "nebraska",
"colorado"))
brew_loc <- brew_plot %>%
#filter(!(state %in% c("Alaska", "Hawaii"))) %>%
group_by(full_city, city_lon, city_lat) %>%
summarize(n = n()) %>%
#filter(n >= 5) %>%
arrange(desc(n))
ggplot() +
geom_polygon(data = states, mapping = aes(x = long, y = lat, group = group),
color = "white") +
geom_point(data = brew_loc, mapping = aes(x = city_lon, y = city_lat,
size = n), color = "red", alpha = 0.5) +
scale_size_area(name = "Number of\nBreweries") +
coord_map() +
labs(title = "Central US Breweries") +
theme_void() +
theme(plot.title = element_text(size = 12, face = "bold",
margin = margin(3, 0, 0, 0)),
legend.position = "bottom",
legend.title = element_text(size = 8))
# The whole US
states <- map_data("state")
brew_loc <- all_breweries %>%
filter(!(state %in% c("Alaska", "Hawaii"))) %>%
group_by(state, full_city, city_lon, city_lat) %>%
summarize(num_brewery = n(),
mean_rating = mean(brewery_rating, na.rm = TRUE),
mean_beeravg = mean(beer_avg, na.rm = TRUE)) %>%
#filter(num_brewery >= 3) %>%
arrange(desc(num_brewery))
brew_loc <- brew_loc[which(complete.cases(brew_loc)), ]
ggplot() +
geom_polygon(data = states, mapping = aes(x = long, y = lat, group = group),
color = "white") +
geom_point(data = brew_loc, mapping = aes(x = city_lon, y = city_lat,
size = num_brewery), color = "red", alpha = 0.5) +
scale_size_area(name = "Number of\nBreweries", breaks = seq(10, 60, 10)) +
coord_map() +
labs(title = "All US Breweries") +
theme_void() +
theme(plot.title = element_text(size = 12, face = "bold",
margin = margin(3, 0, 0, 0)),
legend.position = "bottom",
legend.title = element_text(size = 8)) +
guides(size = guide_legend(nrow = 1))
brew_loc$brew_descrip <- case_when(
brew_loc$num_brewery %in% 1:5 ~ "1-5 Breweries",
brew_loc$num_brewery %in% 6:10 ~ "6-10 Breweries",
brew_loc$num_brewery %in% 10:20 ~ "10-20 Breweries",
brew_loc$num_brewery %in% 20:40 ~ "20-40 Breweries",
brew_loc$num_brewery > 40 ~ "More than 40 Breweries"
)
brew_loc$brew_descrip <- fct_inorder(brew_loc$brew_descrip) %>% fct_rev()
p <- ggplot(data = brew_loc, mapping = aes(x = city_lon, y = city_lat,
size = num_brewery, frame = brew_descrip)) +
geom_polygon(data = states, mapping = aes(x = long, y = lat, group = group),
color = "white", inherit.aes = FALSE) +
geom_point(aes(x = city_lon, y = city_lat, size = num_brewery),
color = "grey", alpha = 0.2, inherit.aes = FALSE) +
geom_point(color = "red", alpha = 0.5) +
scale_size_area(name = "Number of\nBreweries", breaks = seq(10, 60, 10)) +
coord_map() +
labs(title = "US Breweries: Cities with ") +
theme_void() +
theme(plot.title = element_text(size = 12, face = "bold",
margin = margin(3, 0, 0, 0)),
legend.position = "bottom",
legend.title = element_text(size = 8),
plot.margin = unit(c(0,0,0,0), "in")) +
guides(size = guide_legend(nrow = 1))
gg_animate(p, interval = 2)
unlink('ggplot2_cache', recursive = TRUE)
knitr::opts_knit$get('rmarkdown.pandoc.to')
knitr::current_input()
?rmarkdown::render
rmarkdown::render("presentation.Rmd", output_format = "html_document",
output_options(list(keep_md = "yes")), output_file = "index.html")
rmarkdown::render("presentation.Rmd", output_format = "html_document",
output_options = list(keep_md = "yes"), output_file = "index.html")
rmarkdown::render("presentation.Rmd", output_format = "html_document",
output_file = "index.html")
rmarkdown::render("presentation.Rmd", output_format = "html_document",
output_file = "index.html")
rmarkdown::render("presentation.Rmd", output_format = "github_document",
output_file = "README.md")
rmarkdown::render("presentation.Rmd", output_format = "html_document",
output_file = "index.html")
rmarkdown::render("presentation.Rmd", output_format = "github_document",
output_file = "README.md")
